%matplotlib inline
%config InlineBackend.figure_format='retina'
from urllib.request import urlretrieve
from os.path import isfile,isdir
from tqdm import tqdm
import tarfile
import random
from sklearn.preprocessing import LabelBinarizer
from sklearn.preprocessing import OneHotEncoder
import pickle

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import seaborn as sns
import tensorflow as tf
from tensorflow.python.framework import ops
from PIL import Image

from tensorflow.keras.datasets import cifar10
(x_train,y_train), (x_test, y_test)=cifar10.load_data()

#Downloading data from https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz
170500096/170498071 [==============================] - 93s 1us/step

x_train.shape
#(50000, 32, 32, 3)

x_train[0]
#array([[[ 59,  62,  63],
        [ 43,  46,  45],
        [ 50,  48,  43],
        ...,
        ...,
        [216, 184, 140],
        [151, 118,  84],
        [123,  92,  72]]], dtype=uint8)

x_train[0].shape
#(32, 32, 3)

plt.imshow(x_train[0])

x_train[0].max()
#255
#scale them
x_train=x_train/255
x_test=x_test/255

#Convert labels to categorical data
from tensorflow.keras.utils import to_categorical
y_cat_train=to_categorical(y_train,10)
y_cat_test=to_categorical(y_test,10)

#Build the model
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Conv2D, MaxPool2D, Flatten
